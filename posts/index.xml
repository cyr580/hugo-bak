<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Blog on wolanx</title><link>https://wolanx.com/posts/</link><description>Recent content in Blog on wolanx</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 11 Feb 2022 22:17:51 +0800</lastBuildDate><atom:link href="https://wolanx.com/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>python Dockerfile</title><link>https://wolanx.com/posts/docker/python.dockerfile/</link><pubDate>Fri, 11 Feb 2022 22:17:51 +0800</pubDate><guid>https://wolanx.com/posts/docker/python.dockerfile/</guid><description>FROMpython:3.10.0-slimRUN sed -i &amp;#39;s/deb.debian.org/mirrors.aliyun.com/g&amp;#39; /etc/apt/sources.list \ &amp;amp;&amp;amp; sed -i &amp;#39;s/security.debian.org/mirrors.aliyun.com/g&amp;#39; /etc/apt/sources.listRUN mkdir ~/.pip \ &amp;amp;&amp;amp; echo &amp;#39;[global]\n \ trusted-host=mirrors.aliyun.com\n \ index-url=https://mirrors.aliyun.com/pypi/simple\n \ &amp;#39; &amp;gt; ~/.pip/pip.confRUN apt-get update -y \ &amp;amp;&amp;amp; apt-get install -y gcc curl \ &amp;amp;&amp;amp; apt-get install -y --no-install-recommends vim tree \ &amp;amp;&amp;amp; rm -rf /var/lib/apt/lists/*RUN curl -s -L -o ~/rocketmq-client-cpp-2.0.0.amd64.deb \ &amp;#39;https://github.com.cnpmjs.org/apache/rocketmq-client-cpp/releases/download/2.0.0/rocketmq-client-cpp-2.0.0.amd64.deb&amp;#39; \ &amp;amp;&amp;amp; dpkg -i ~/rocketmq-client-cpp-2.0.0.amd64.deb \ &amp;amp;&amp;amp; rm -f ~/rocketmq-client-cpp-2.</description></item><item><title>hugo + github action 免费个人博客【2022版】</title><link>https://wolanx.com/posts/article/hugo-+-github-action-%E5%85%8D%E8%B4%B9%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A22022%E7%89%88/</link><pubDate>Fri, 11 Feb 2022 17:44:26 +0800</pubDate><guid>https://wolanx.com/posts/article/hugo-+-github-action-%E5%85%8D%E8%B4%B9%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A22022%E7%89%88/</guid><description>https://blog.csdn.net/wolanx/article/details/122857729 Intro # 免费个人博客 的教程非常的 多，但大多面向 纯小白，反而对有一定基础的同学显得 落后 + 啰嗦，本文整合目前已知最好的方式，最快捷优雅的搞定一个博客，并给出 常见错误。
知识点 # hugo 的安装及使用不是本文重点，其实同理 hexo git github 默认已掌握 github page 生成可访问的页面的 灵魂 所在 github action 自动生成上一步 完整链路解析 # git commit 提交 触发 github action .github/workflows/my-pipeline.yml 并满足设置中的 on 条件 触发 pipeline 中的 steps checkout：相当与 git clone，并且后续操作具有 github 完整权限，可以通过 permissions 设置 setup hugo：准备构建要求，安装对应版本，注意是否需要 extended build：构建出静态文件，并输出到 public 文件夹 deploy：该插件来自 插件市场 自动创建分支 gh-pages 自动 copy public 到新分支 自动提交 自动生成 CNAME 文件，根据 cname 设置，想要 自定义域名 的注意这里了 打开 https://github.</description></item><item><title>logfmt python 实现</title><link>https://wolanx.com/posts/article/logfmt-python-%E5%AE%9E%E7%8E%B0/</link><pubDate>Fri, 11 Feb 2022 15:45:10 +0800</pubDate><guid>https://wolanx.com/posts/article/logfmt-python-%E5%AE%9E%E7%8E%B0/</guid><description>https://blog.csdn.net/wolanx/article/details/122733747 Intro # 现在很多主流日志系统推崇 logfmt 格式，但是 python 中配套的不多，这边给个参考
日志大概长这样
# log.info(&amp;#34;haha&amp;#34;) time=&amp;#34;2022-01-28T17:00:52+0800&amp;#34; type=default level=info method=&amp;#34;a.py:82&amp;#34; msg=&amp;#34;haha&amp;#34; # log.warning(&amp;#34;no access&amp;#34;) time=&amp;#34;2022-01-28T17:00:52+0800&amp;#34; type=default level=warning method=&amp;#34;a.py:83&amp;#34; msg=&amp;#34;no access&amp;#34; 实现过程 # PiiLogger 继承 logging.Logger 绑定自定义的 formatter 清空原有 handler 否则会重复输出 把 formatter 注册给 handler hook 外层 变量 （如：每条log带上web请求的uuid） PiiLoggerFormatter 继承 logging.Formatter 实现 format 的 自定义，内嵌变量请参考 官方 LogRecord 属性 hook 外层 变量 外层变量的使用 # def getUUid(): v = None if has_request_context(): # 判断 flask web 的生命周期下 v = Pii.</description></item><item><title>python 使用 reportlab 生成 pdf</title><link>https://wolanx.com/posts/article/python-%E4%BD%BF%E7%94%A8-reportlab-%E7%94%9F%E6%88%90-pdf/</link><pubDate>Wed, 09 Feb 2022 15:30:51 +0800</pubDate><guid>https://wolanx.com/posts/article/python-%E4%BD%BF%E7%94%A8-reportlab-%E7%94%9F%E6%88%90-pdf/</guid><description>https://blog.csdn.net/wolanx/article/details/122828185 Intro # 项目中遇到需要 导出统计报表 等业务时，通常需要 pdf 格式。python 中比较有名的就是 reportlab 。 这边通过几个小 demo 快速演示常用 api。所有功能点 源码 都在 使用场景。
一句话了解：跟 css 差不多，就是不断地对每样东西设置 style，然后把 style 和内容绑定。
功能点 # 生成 文件： 先 SimpleDocTemplate(&amp;lsquo;xxx.pdf&amp;rsquo;)，然后 build 流文件：先 io.BytesIO() 生成句柄，然后同理 曲线图 LinePlot 饼图 Pie 文字 Paragraph fontSize 字体大小 推荐 14 加粗 &amp;lt;b&amp;gt;xxx&amp;lt;/b&amp;gt; 使用的是 html 的方式，字体自动实现 firstLineIndent 首行缩进 推荐 2 * fontSize leading 行间距 推荐 1.5 * fontSize fontName 默认中文会变成 ■ 下载 .</description></item><item><title>5种底层能力</title><link>https://wolanx.com/posts/other/5-key-area/</link><pubDate>Sat, 29 Jan 2022 09:49:47 +0800</pubDate><guid>https://wolanx.com/posts/other/5-key-area/</guid><description>真正厉害的工程师，都在修炼这5种底层能力 https://mp.weixin.qq.com/s/HpFS3jbmHPLKtdyNmflJZQ 6个职级 # 职级一共分六级
E1 - 助理工程师（Associate Engineer） E2 - 工程师（Engineer） E3 - 高级工程师（Senior Engineer） E4 - 资深工程师（Staff Engineer） E5 - 高级资深工程师（Senior Staff Engineer） E6 - 首席工程师（Principal Engineer） 5个关键区 # 评估的纬度共分5个关键区（Key area），关键区再细分为15个价值（Value）维度，价值维度再细分为27个胜任力（Competency）纬度。
技术技能（Technical skills） 交付（Delivery） 反馈、沟通和协作（Feedback，Communication，Collaboration） 领导力（Leadership） 战略性影响（Strategic Impact） 影响力范围 # 各个工程级别的最主要差异在所能hold住的工作的范围（scope），或者说影响力范围，其中： E1～E3属于独立贡献者（individual contributor），工作范围有限，偏任务执行（Execution of Work）。 E4～E6能够善用人力（一般要带团队）和产品等杠杆进行规模化的生产（Utilizing skills to scale and generate leverage）。 职级越高越偏向战略方向、理念和文化建设。
E1：任务范围内 E2：项目范围内 E3：小组/团队内 E4：整个团队范围 E5：几个相关团队范围 E6：整个技术部门甚至公司 职级和胜任力评估框架 # 技术技能 质量和测试-写代码 质量和测试-测试 质量和测试-调试 质量和测试-可观测性 软件设计和架构-理解领域（domain） 软件设计和架构-软件架构 软件设计和架构-安全 交付 增量价值交付-任务分解 增量价值交付-优先级和依赖分析 增量价值交付-应对不确定性 自我组织-可信赖和责任感 自我组织-经济思维 反馈、沟通和协作 反馈-提供反馈 反馈-寻求和接收反馈 沟通-有效沟通 沟通-知识分享 协作-团队合作 协作-关系建设 协作-解决分歧 领导力 推进对齐 流程思考 协调促进 教导 战略性影响 业务敏锐和战略-业务敏锐 业务敏锐和战略-战略工作 业务敏锐和战略-产品思维 Demo # 软件设计和架构-软件架构：</description></item><item><title>Arthas</title><link>https://wolanx.com/posts/java/arthas/</link><pubDate>Thu, 27 Jan 2022 20:10:57 +0800</pubDate><guid>https://wolanx.com/posts/java/arthas/</guid><description>Intro # Java 诊断工具 Arthas 入门教程 https://start.aliyun.com/course?id=qDlgqpBT 进阶 命令 https://arthas.aliyun.com/doc/advanced-use.html Install # wget https://arthas.aliyun.com/arthas-boot.jar use java &amp;gt; 8 when jre tool.java
Start # java -jar arthas-boot.jar # input pid help dashboard thread 1 thread 1 | grep &amp;#39;main(&amp;#39; sc -d *MathGame # 查找JVM里已加载的类 jad demo.MathGame # 反编译代码 watch demo.MathGame primeFactors returnObj # 查看函数的参数/返回值/异常信息</description></item><item><title>算法总结</title><link>https://wolanx.com/posts/algo/algo/</link><pubDate>Tue, 25 Jan 2022 12:00:00 +0800</pubDate><guid>https://wolanx.com/posts/algo/algo/</guid><description>Intro # 重学算法，之前停留在学习基本思想比如 leetcode#704，但是问题衍生出来的实际问题直接看不懂 leetcode#475。 重新以实际题的方式去了解
二分 # 单调性 000111找突变边界 使用主动与被动不同的视角看 704. 二分查找 https://leetcode-cn.com/problems/binary-search/ 278. 第一个错误的版本 https://leetcode-cn.com/problems/first-bad-version/ 475. 供暖器 https://leetcode-cn.com/problems/heaters/ 540. 有序数组中的单一元素 https://leetcode-cn.com/problems/single-element-in-a-sorted-array/ 240. 搜索二维矩阵 II https://leetcode-cn.com/problems/search-a-2d-matrix-ii/ 875. 爱吃香蕉的珂珂 https://leetcode-cn.com/problems/koko-eating-bananas/ 611. 有效三角形的个数 https://leetcode-cn.com/problems/valid-triangle-number/ 1760. 袋子里最少数目的球 https://leetcode-cn.com/problems/minimum-limit-of-balls-in-a-bag/ 300. 最长递增子序列 https://leetcode-cn.com/problems/longest-increasing-subsequence/ 1011. 在 D 天内送达包裹的能力 https://leetcode-cn.com/problems/capacity-to-ship-packages-within-d-days/ 动态规划 #</description></item><item><title>hugo-book</title><link>https://wolanx.com/posts/tool/hugo/</link><pubDate>Thu, 20 Jan 2022 22:17:51 +0800</pubDate><guid>https://wolanx.com/posts/tool/hugo/</guid><description>Intro # 本站使用 博客系统hugo，搭配主题hugo-book
hugo https://gohugo.io/getting-started/quick-start/ hugo-book 官方demo https://hugo-book-demo.netlify.app/posts/migrate-from-jekyll/ 代码demo https://github1s.com/alex-shpak/hugo-book Start # # 本地测试 hugo server -w # add hugo new posts/xxx.md Guide # Intro Install Start Packages Contributing About License Test # MacOS MacOS Content # Linux Linux Content # Windows Windows Content #</description></item><item><title>vagrant</title><link>https://wolanx.com/posts/tool/vagrant/</link><pubDate>Mon, 10 Jan 2022 12:00:00 +0800</pubDate><guid>https://wolanx.com/posts/tool/vagrant/</guid><description>Intro # 快速可自定义的虚拟机，几行命令搞定，不用再设置一堆东西。 自定义文件Vagrantfile实现环境重复利用 https://www.vagrantup.com/intro Install # https://www.vagrantup.com/downloads # wget https://releases.hashicorp.com/vagrant/2.2.19/vagrant_2.2.19_x86_64.msi Start # vagrant init generic/alpine312 # https://vagrantcloud.com/search vagrant up --provider=hyperv # start vagrant halt # stop vagrant ssh vagrant destroy # delete Other # vagrant box list # list image vagrant global-status # list vm vagrant destroy 1a2b3c4d # 手动下包 wget https://app.vagrantup.com/generic/boxes/alpine312/versions/3.6.4/providers/hyperv.box vagrant box add my/alpine312 hyperv.box # 127.0.0.1:2222 # root vagrant Vagrantfile # # touch Vagrantfile Vagrant.</description></item><item><title>php Dockerfile</title><link>https://wolanx.com/posts/docker/php.dockerfile/</link><pubDate>Thu, 22 Mar 2018 00:00:00 +0000</pubDate><guid>https://wolanx.com/posts/docker/php.dockerfile/</guid><description>2019.04.04 # FROM php:7.1.11-fpm-alpine RUN apk add --no-cache freetype libpng libjpeg-turbo freetype-dev libpng-dev libjpeg-turbo-dev \ &amp;amp;&amp;amp; apk add --no-cache --virtual .build-deps autoconf g++ libssh2 openssl openssl-dev make pcre-dev tree curl \ &amp;amp;&amp;amp; apk add --no-cache postgresql-dev \ &amp;amp;&amp;amp; docker-php-ext-configure gd \ --with-gd \ --with-freetype-dir=/usr/include/ \ --with-png-dir=/usr/include/ \ --with-jpeg-dir=/usr/include/ \ &amp;amp;&amp;amp; pecl install mongodb-1.5.2 redis apcu xdebug \ &amp;amp;&amp;amp; docker-php-ext-enable mongodb redis apcu xdebug \ &amp;amp;&amp;amp; docker-php-ext-install gd pdo_mysql opcache bcmath pgsql pdo_pgsql zip sockets \ &amp;amp;&amp;amp; apk del .</description></item></channel></rss>